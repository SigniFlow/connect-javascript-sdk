/**
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetAuditDocumentRequest from '../model/GetAuditDocumentRequest';
import GetAuditDocumentResponse from '../model/GetAuditDocumentResponse';
import GetDocumentAuditRequest from '../model/GetDocumentAuditRequest';
import GetDocumentAuditResponse from '../model/GetDocumentAuditResponse';

/**
* Audits service.
* @module api/AuditsApi
* @version 1.0.1
*/
export default class AuditsApi {

    /**
    * Constructs a new AuditsApi. 
    * @alias module:api/AuditsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get Audit Document
     * #### Used to get an audit document.
     * @param {String} contentType 
     * @param {Object} opts Optional parameters
     * @param {module:model/GetAuditDocumentRequest} opts.getAuditDocumentRequest ##### Get Audit Document Request Model
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetAuditDocumentResponse} and HTTP response
     */
    postGetAuditDocumentWithHttpInfo(contentType, opts) {
      opts = opts || {};
      let postBody = opts['getAuditDocumentRequest'];
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling postGetAuditDocument");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetAuditDocumentResponse;
      return this.apiClient.callApi(
        '/GetAuditDocument', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Audit Document
     * #### Used to get an audit document.
     * @param {String} contentType 
     * @param {Object} opts Optional parameters
     * @param {module:model/GetAuditDocumentRequest} opts.getAuditDocumentRequest ##### Get Audit Document Request Model
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetAuditDocumentResponse}
     */
    postGetAuditDocument(contentType, opts) {
      return this.postGetAuditDocumentWithHttpInfo(contentType, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Document Audit
     * #### Used to get the audit information from a document.
     * @param {String} contentType 
     * @param {Object} opts Optional parameters
     * @param {module:model/GetDocumentAuditRequest} opts.getDocumentAuditRequest ##### Get Document Audit Request Model
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetDocumentAuditResponse} and HTTP response
     */
    postGetDocumentAuditWithHttpInfo(contentType, opts) {
      opts = opts || {};
      let postBody = opts['getDocumentAuditRequest'];
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling postGetDocumentAudit");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetDocumentAuditResponse;
      return this.apiClient.callApi(
        '/GetDocumentAudit', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Document Audit
     * #### Used to get the audit information from a document.
     * @param {String} contentType 
     * @param {Object} opts Optional parameters
     * @param {module:model/GetDocumentAuditRequest} opts.getDocumentAuditRequest ##### Get Document Audit Request Model
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetDocumentAuditResponse}
     */
    postGetDocumentAudit(contentType, opts) {
      return this.postGetDocumentAuditWithHttpInfo(contentType, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
